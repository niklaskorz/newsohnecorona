{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { xml2js } from \"xml-js\";\n\n  const keywords = [\n    \"corona\",\n    \"omikron\",\n    \"inzidenz\",\n    \"luca-app\",\n    \"impfung\",\n    \"impfpflicht\"\n  ];\n\n  let selectedSource = \"Tagesschau\";\n  let articles = [];\n\n  const feeds = {\n    Tagesschau: \"https://www.tagesschau.de/xml/rss2/\",\n    \"SWR Aktuell\": \"https://www.swr.de/~rss/swraktuell/swraktuell-100.xml\",\n    \"SWR Aktuell BW\": \"https://www.swr.de/~rss/swraktuell/swraktuell-bw-100.xml\",\n    \"SWR Aktuell RP\": \"https://www.swr.de/~rss/swraktuell/swraktuell-rp-100.xml\"\n  };\n\n  async function getFeed(name) {\n    selectedSource = name;\n    const resp = await fetch(feeds[name]);\n    const text = await resp.text();\n    const data = xml2js(text, { compact: true });\n    articles = data.rss.channel.item\n      .filter(item =>\n        keywords.every(\n          keyword =>\n            !item.title._text.toLowerCase().includes(keyword) &&\n            !item.description._text.toLowerCase().includes(keyword)\n        )\n      )\n      .map(item => ({\n        title: item.title._text,\n        description: item.description._text,\n        link: item.link._text,\n        date: new Date(item.pubDate._text)\n      }))\n      .sort((a, b) => b.date.getTime() - a.date.getTime());\n  }\n  getFeed(selectedSource);\n</script>\n\n<style>\n  :global(body) {\n    background: #fafafa;\n    font-family: Helvetica;\n  }\n\n  main {\n    max-width: 600px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  nav {\n    background: #333;\n  }\n\n  nav > ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n\n  nav > ul > li {\n    display: inline-block;\n  }\n\n  nav > ul > li.active,\n  nav > ul > li:hover {\n    background: #555;\n  }\n\n  nav > ul > li > button {\n    display: inline-block;\n    padding: 10px;\n    color: #fff;\n    text-decoration: none;\n    background: transparent;\n    border: none;\n    cursor: pointer;\n  }\n\n  article {\n    margin-top: 40px;\n  }\n\n  h2 {\n    margin-bottom: 5px;\n  }\n\n  h2 > a {\n    text-decoration: none;\n    color: #111;\n  }\n\n  h2 > a:hover {\n    text-decoration: underline;\n  }\n\n  h3 {\n    margin-top: 0;\n    color: #444;\n  }\n</style>\n\n<main>\n  <h1>{selectedSource} ohne Corona</h1>\n  <nav>\n    <ul>\n      {#each Object.keys(feeds) as source}\n      <li class={source === selectedSource ? \"active\" : \"\"}><button on:click={() => getFeed(source)}>{source}</button></li>\n      {/each}\n    </ul>\n  </nav>\n  {#each articles as article}\n  <article>\n    <h2><a href={article.link} target=\"_blank\">{article.title}</a></h2>\n    <h3>{article.date.toLocaleString()}</h3>\n    <p>{article.description}</p>\n  </article>\n  {/each}\n  <hr>\n  <p>Gefilterte Keywords: {keywords.join(\", \")}</p>\n</main>\n"
  ],
  "names": [],
  "mappings": "AA+CU,IAAI,AAAE,CAAC,AACb,UAAU,CAAE,OAAO,CACnB,WAAW,CAAE,SAAS,AACxB,CAAC,AAED,IAAI,4DAAC,CAAC,AACJ,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,AACpB,CAAC,AAED,GAAG,4DAAC,CAAC,AACH,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,kBAAG,CAAG,EAAE,6CAAC,CAAC,AACR,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,AACX,CAAC,AAED,kBAAG,CAAG,iBAAE,CAAG,EAAE,8BAAC,CAAC,AACb,OAAO,CAAE,YAAY,AACvB,CAAC,AAED,kBAAG,CAAG,iBAAE,CAAG,EAAE,qCAAO,CACpB,kBAAG,CAAG,iBAAE,CAAG,gCAAE,MAAM,AAAC,CAAC,AACnB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,kBAAG,CAAG,iBAAE,CAAG,iBAAE,CAAG,MAAM,eAAC,CAAC,AACtB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,IAAI,CACrB,UAAU,CAAE,WAAW,CACvB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,OAAO,4DAAC,CAAC,AACP,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,EAAE,4DAAC,CAAC,AACF,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,iBAAE,CAAG,CAAC,6CAAC,CAAC,AACN,eAAe,CAAE,IAAI,CACrB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,iBAAE,CAAG,8CAAC,MAAM,AAAC,CAAC,AACZ,eAAe,CAAE,SAAS,AAC5B,CAAC,AAED,EAAE,4DAAC,CAAC,AACF,UAAU,CAAE,CAAC,CACb,KAAK,CAAE,IAAI,AACb,CAAC"
}